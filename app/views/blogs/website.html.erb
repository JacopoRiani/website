
 <div class="dashboard-bg" style="background-image: url(<%= asset_path 'projback.jpg' %>); background-size: 100% auto; height: 350px; position: relative;">
    <div class="dashboard-overlay"></div>
    <div class="container" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">
      <div class="row">
        <div class="col-md-6 offset-md-3 text-center text-white">
          <div class="my-4">
            <br>
            <br>
            <h1><span class="accent-title text-white mt-5">YOUR WEBSITE</span></h1>
             <h5><span class="accent-title text-white mt-5">19 April 2024</span></h5>
          </div>
        </div>
      </div>
    </div>
  </div>
<div class="container" style="max-width: 960px;">

<p>
Creating your own website can be a rewarding endeavor. In this short piece of work i want to take you through some useful insights you may get to know to build you first project!
First of all let's dive into what are the steps you should know.
Hereinafter an overview of 11 passages on what you need to know to get started:
</p>
<ol>
  <li>
    <strong>HTML (Hypertext Markup Language)</strong>: HTML is the standard markup language used to create the structure and content of web pages. It defines the elements that make up a web page, such as headings, paragraphs, images, and links.
  </li>
  <li>
    <strong>CSS (Cascading Style Sheets)</strong>: CSS is used to style the appearance of HTML elements on a web page. It allows you to define colors, fonts, layouts, and other visual aspects of your site.
  </li>
  <li>
    <strong>JavaScript</strong>: JavaScript adds interactivity and dynamic behavior to web pages. You can use JavaScript to create animations, handle user input, validate forms, and interact with web APIs.
  </li>
  <li>
    <strong>Web Development Frameworks and Libraries</strong>: Frameworks like <a href="https://getbootstrap.com/" target="_blank">Bootstrap</a>, Foundation, and libraries like jQuery can help streamline the process of building websites by providing pre-built components, styles, and functionality.
  </li>
  <li>
    <strong>Responsive Design</strong>: With the increasing variety of devices and screen sizes, it's essential to design websites that adapt and look good on different devices, such as desktops, tablets, and smartphones. Learn about responsive design techniques using CSS media queries and flexible layouts.
  </li>
  <li>
    <strong>Web Hosting</strong>: To make your website accessible on the internet, you'll need web hosting. Web hosting services provide server space where you can store your website files and make them available to visitors. Consider options like shared hosting, VPS hosting, or cloud hosting. Major cloud computing platforms like Azure and AWS also offer web hosting services. For example, Microsoft Azure provides services like Azure Web Apps and AWS offers solutions like Amazon Elastic Compute Cloud (EC2) and AWS Elastic Beanstalk, which allow you to host websites and web applications with scalability and reliability in the cloud.
  </li>
  <li>
    <strong>Domain Name</strong>: A domain name is the address that people use to access your website (e.g., www.example.com). Choose a domain name that reflects your brand or the content of your site and register it with a domain registrar.
  <p>One of the platform where you can buy you domanin is:  <a href="https://www.namecheap.com/" target="_blank">Namecheap</a> I ve used their services and they are very keen on helping you whether you face any issues. Very recommended.
  </p>
  </li>
  <li>
    <strong>HTTP and HTTPS</strong>: Understand the basics of HTTP (Hypertext Transfer Protocol) and HTTPS (HTTP Secure) protocols. HTTPS encrypts data transmitted between the user's browser and the web server, providing security and privacy for your website visitors.
  </li>
  <li>
    <strong>Version Control</strong>: Version control systems like Git are essential for managing changes to your website's codebase. Learn how to use Git for tracking changes, collaborating with others, and deploying your site.
  </li>
  <li>
    <strong>SEO (Search Engine Optimization)</strong>: SEO involves optimizing your website to improve its visibility in search engine results. Learn about on-page and off-page SEO techniques to increase your site's ranking and attract more organic traffic.
  <p>I haven't had a look yet, on the web you can find some good insights</p>
  </li>
  <li>
    <strong>Analytics</strong>: Use web analytics tools like Google Analytics to track and analyze visitor behavior on your website. Analyzing data such as page views, traffic sources, and user demographics can help you make informed decisions to improve your site's performance.
  </li>
</ol>


<ul>
  <li>
    <strong>With Database:</strong>
    <ul>
      <li>
        <strong>Heroku:</strong> Heroku offers a free tier for deploying web applications with support for various programming languages and databases, including PostgreSQL, MySQL, and MongoDB.
      </li>
      <li>
        <strong>DigitalOcean:</strong> DigitalOcean provides droplets where you can deploy your web applications. You can install databases like PostgreSQL, MySQL, or MongoDB on these droplets.
      </li>
      <li>
        <strong>AWS Elastic Beanstalk:</strong> Amazon Web Services (AWS) Elastic Beanstalk supports various programming languages and databases. You can easily deploy web applications with databases like Amazon RDS (MySQL, PostgreSQL, SQL Server, etc.) or Amazon Aurora.
      </li>
      <li>
        <strong>Google App Engine:</strong> Google App Engine offers a platform for building and deploying web applications. It supports popular databases like MySQL, PostgreSQL, and Cloud Datastore.
      </li>
      <li>
        <strong>Microsoft Azure App Service:</strong> Azure App Service allows you to deploy web applications with support for databases like Azure SQL Database, MySQL, and PostgreSQL.
      </li>
    </ul>
  </li>
  <li>
    <strong>Without Database:</strong>
    <ul>
      <li>
        <strong>GitHub Pages:</strong> GitHub Pages allows you to host static websites directly from your GitHub repositories. It's ideal for static sites like blogs, portfolios, or documentation sites.
      </li>
      <li>
        <strong>Netlify:</strong> Netlify offers free hosting for static websites with continuous deployment from Git. You can deploy static sites built with HTML, CSS, and JavaScript.
      </li>
      <li>
        <strong>Vercel:</strong> Vercel provides free hosting for static and serverless functions-based applications. It's well-suited for Next.js and React-based applications but supports any static site generator or framework.
      </li>
      <li>
        <strong>Firebase Hosting:</strong> Firebase Hosting offers free hosting for static websites and single-page applications. It's part of the Firebase platform and integrates well with other Firebase services like Authentication and Cloud Functions.
      </li>
      <li>
        <strong>Amazon S3:</strong> Amazon Simple Storage Service (S3) allows you to host static websites by storing your site's files in an S3 bucket. It's part of AWS and offers a free tier with limited storage and data transfer.
      </li>
    </ul>
  </li>
</ul></div>
